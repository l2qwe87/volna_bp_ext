
//&ИзменениеИКонтроль("ПолучитьОстаткиТоваров")
&Вместо("ПолучитьОстаткиТоваров")
Функция влн_ПолучитьОстаткиТоваров(МоментВремени, Организация, ПодразделениеОрганизации, ТаблицаСписания, ТаблицаВозвраты)

	МассивСчетовУчета = РазличныеЗначенияКолонкиТаблицы(ТаблицаСписания, "СчетУчета");

	// Блокируем регистр Хозрасчетный для получения остатков
	Если ТранзакцияАктивна() Тогда
		Блокировка = Новый БлокировкаДанных;
		ТаблицаСписания.Индексы.Добавить("СчетУчета");

		Для каждого СчетУчета Из МассивСчетовУчета Цикл

			// Отдельная блокировка по каждому счету учета
			СуммовойУчетПоСкладам = БухгалтерскийУчет.ВедетсяСуммовойУчетПоСкладам(СчетУчета);
			Если СуммовойУчетПоСкладам Тогда
				Если БухгалтерскийУчет.НаСчетеВедетсяУчетПоКонтрагентам(СчетУчета) Тогда
					ТаблицаСписанияПоСчету = ТаблицаСписания.Скопировать(Новый Структура("СчетУчета", СчетУчета), "Номенклатура,Контрагент,Склад");
					ТаблицаСписанияПоСчету.Свернуть("Номенклатура,Контрагент,Склад");
				Иначе
					ТаблицаСписанияПоСчету = ТаблицаСписания.Скопировать(Новый Структура("СчетУчета", СчетУчета), "Номенклатура,Склад");
					ТаблицаСписанияПоСчету.Свернуть("Номенклатура,Склад");
				КонецЕсли;
			Иначе
				Если БухгалтерскийУчет.НаСчетеВедетсяУчетПоКонтрагентам(СчетУчета) Тогда
					ТаблицаСписанияПоСчету = ТаблицаСписания.Скопировать(Новый Структура("СчетУчета", СчетУчета), "Номенклатура,Контрагент");
					ТаблицаСписанияПоСчету.Свернуть("Номенклатура,Контрагент");
				Иначе
					ТаблицаСписанияПоСчету = ТаблицаСписания.Скопировать(Новый Структура("СчетУчета", СчетУчета), "Номенклатура");
					ТаблицаСписанияПоСчету.Свернуть("Номенклатура");
				КонецЕсли;
			КонецЕсли;
			ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Хозрасчетный");
			ЭлементБлокировки.УстановитьЗначение("Период",      Новый Диапазон(, МоментВремени.Дата));
			ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
			ЭлементБлокировки.УстановитьЗначение("Счет",        СчетУчета);
			СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетУчета);
			Если СвойстваСчета.УчетПоПодразделениям Тогда
				ЭлементБлокировки.УстановитьЗначение("Подразделение", ПодразделениеОрганизации);
			КонецЕсли;
			ЭлементБлокировки.ИсточникДанных = ТаблицаСписанияПоСчету;
			Для Ном = 1 По СвойстваСчета.КоличествоСубконто Цикл
				Если СвойстваСчета["ВидСубконто" + Ном] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура
					И НЕ СчетУчета = ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение Тогда // Обход ошибки при наложении блокировки
					ЭлементБлокировки.ИспользоватьИзИсточникаДанных(
					ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура, "Номенклатура");
				ИначеЕсли СвойстваСчета["ВидСубконто" + Ном] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады 
					И СуммовойУчетПоСкладам Тогда
					// Если нет суммового учета по складам - суммы получаются запросом без отбора по складам,
					// поэтому блокировать склады не нужно
					ЭлементБлокировки.ИспользоватьИзИсточникаДанных(
					ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "Склад");
				ИначеЕсли СвойстваСчета["ВидСубконто" + Ном] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты Тогда
					ЭлементБлокировки.ИспользоватьИзИсточникаДанных(
					ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты, "Контрагент");
				КонецЕсли;
			КонецЦикла;

		КонецЦикла;

		Блокировка.Заблокировать();
	КонецЕсли;

	// Получаем остатки номенклатуры

	МассивНоменклатуры = РазличныеЗначенияКолонкиТаблицы(ТаблицаСписания, "Номенклатура");
	МассивСкладов      = РазличныеЗначенияКолонкиТаблицы(ТаблицаСписания, "Склад");
	МассивКонтрагентов = РазличныеЗначенияКолонкиТаблицы(ТаблицаСписания, "Контрагент");

	// Сортировка счетов учета
	СчетаУчетаН   = Новый Массив; // счета с суммовым учетом только по номенклатуре
	СчетаУчетаНС  = Новый Массив; // счета с суммовым учетом по номенклатуре и складам
	СчетаУчетаНП  = Новый Массив; // счета с суммовым учетом по номенклатуре и партиям
	СчетаУчетаНПС = Новый Массив; // счета с суммовым учетом по номенклатуре, складам и партиям
	СчетаУчетаНК  = Новый Массив; // счета с суммовым учетом по контрагентам, и номенклатуре
	СчетаУчетаНПК = Новый Массив; // счета с суммовым учетом по контрагентам, номенклатуре и партиям
	СчетаУчетаНКС = Новый Массив; // счета с суммовым учетом по контрагентам, номенклатуре и складам

	СчетаУчетаН_Склад  = Новый Массив; // счета с суммовым учетом только по номенклатуре и количественным по складу
	СчетаУчетаНП_Склад = Новый Массив; // счета с суммовым учетом по номенклатуре и партиям и количественным по складу
	СчетаУчетаНК_Склад = Новый Массив; // счета с суммовым учетом по номенклатуре и контрагентам и количественным по складу

	СортировкаСчетовУчета(МассивСчетовУчета,
	СчетаУчетаН,
	СчетаУчетаНС,
	СчетаУчетаНП,
	СчетаУчетаНПС,
	СчетаУчетаНК,
	СчетаУчетаНПК,
	СчетаУчетаНКС,
	СчетаУчетаН_Склад,
	СчетаУчетаНП_Склад,
	СчетаУчетаНК_Склад);

	ВидыСубконтоН = Новый Массив;
	ВидысубконтоН.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);

	ВидыСубконтоНС = Новый Массив;
	ВидысубконтоНС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидысубконтоНС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);

	ВидыСубконтоНП = Новый Массив;
	ВидысубконтоНП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидысубконтоНП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);

	ВидыСубконтоНПС = Новый Массив;
	ВидыСубконтоНПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	ВидыСубконтоНПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);

	ВидыСубконтоНК = Новый Массив;
	ВидыСубконтоНК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);

	ВидыСубконтоНПК = Новый Массив;
	ВидыСубконтоНПК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНПК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	ВидыСубконтоНПК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);

	ВидыСубконтоНКС = Новый Массив;
	ВидыСубконтоНКС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНКС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоНКС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени",      МоментВремени);
	Запрос.УстановитьПараметр("Подразделение",      ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Организация",        Организация);
	Запрос.УстановитьПараметр("МассивКонтрагентов", МассивКонтрагентов);
	Запрос.УстановитьПараметр("МассивСкладов",      МассивСкладов);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("СчетаУчетаН",        СчетаУчетаН);
	Запрос.УстановитьПараметр("СчетаУчетаНС",       СчетаУчетаНС);
	Запрос.УстановитьПараметр("СчетаУчетаНП",       СчетаУчетаНП);
	Запрос.УстановитьПараметр("СчетаУчетаНПС",      СчетаУчетаНПС);
	Запрос.УстановитьПараметр("СчетаУчетаНК",       СчетаУчетаНК);
	Запрос.УстановитьПараметр("СчетаУчетаНПК",      СчетаУчетаНПК);
	Запрос.УстановитьПараметр("СчетаУчетаНКС",      СчетаУчетаНКС);
	Запрос.УстановитьПараметр("СчетаУчетаН_Склад",  СчетаУчетаН_Склад);
	Запрос.УстановитьПараметр("СчетаУчетаНП_Склад", СчетаУчетаНП_Склад);
	Запрос.УстановитьПараметр("СчетаУчетаНК_Склад", СчетаУчетаНК_Склад);
	Запрос.УстановитьПараметр("ВидысубконтоН",      ВидысубконтоН);
	Запрос.УстановитьПараметр("ВидысубконтоНС",     ВидысубконтоНС);
	Запрос.УстановитьПараметр("ВидысубконтоНП",     ВидысубконтоНП);
	Запрос.УстановитьПараметр("ВидыСубконтоНПС",    ВидыСубконтоНПС);
	Запрос.УстановитьПараметр("ВидыСубконтоНК",     ВидыСубконтоНК);
	Запрос.УстановитьПараметр("ВидыСубконтоНПК",    ВидыСубконтоНПК);
	Запрос.УстановитьПараметр("ВидыСубконтоНКС",    ВидыСубконтоНКС);
	Запрос.УстановитьПараметр("ПустойСклад",        Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяПартия",       Неопределено);
	Запрос.УстановитьПараметр("ПустаяОтгрузка",     Документы.ДокументРасчетовСКонтрагентом.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());

	ТекстСуммыКоличественныхСкладов = "";
	Текст = "";

	//Если не ведется суммовой учет по складам, соберем остатки без учета складов	
	Если СчетаУчетаН_Склад.Количество() > 0 Тогда

		ТекстСуммыКоличественныхСкладов = ТекстСуммыКоличественныхСкладов + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаН
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаН),
		|			&ВидыСубконтоН,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Субконто1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетУчета,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ОстаткиПоСкладам.Счет КАК СчетУчета,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Субконто1 КАК Номенклатура,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто2, &ПустойСклад) КАК Склад,
		|	СУММА(ЕСТЬNULL(ОстаткиПоСкладам.КоличествоОстатокДт, 0)) КАК КоличествоОстатокДт
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаН_Склад
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаН_Склад),
		|			&ВидыСубконтоНС,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто2 В (&МассивСкладов)
		|				И Организация = &Организация) КАК ОстаткиПоСкладам
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоСкладам.Счет,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Субконто1,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто2, &ПустойСклад)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетУчета,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";

	КонецЕсли;

	Если СчетаУчетаНП_Склад.Количество() > 0 Тогда

		ТекстСуммыКоличественныхСкладов = ТекстСуммыКоличественныхСкладов + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ЕСТЬNULL(Остатки.Субконто2, НЕОПРЕДЕЛЕНО) КАК ДокументОприходования,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаНП
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНП),
		|			&ВидыСубконтоНП,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Субконто1,
		|	ЕСТЬNULL(Остатки.Субконто2, НЕОПРЕДЕЛЕНО)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетУчета,
		|	Номенклатура,
		|	ДокументОприходования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоСкладам.Счет КАК СчетУчета,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Субконто1 КАК Номенклатура,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто2, &ПустаяПартия) КАК ДокументОприходования,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто3, &ПустойСклад) КАК Склад,
		|	СУММА(ЕСТЬNULL(ОстаткиПоСкладам.КоличествоОстатокДт, 0)) КАК КоличествоОстатокДт
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаНП_Склад
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНП_Склад),
		|			&ВидыСубконтоНПС,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто3 В (&МассивСкладов)
		|				И Организация = &Организация) КАК ОстаткиПоСкладам
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоСкладам.Счет,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Субконто1,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто2, &ПустаяПартия),
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто3, &ПустойСклад)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетУчета,
		|	Номенклатура,
		|	ДокументОприходования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";

	КонецЕсли;

	Если СчетаУчетаНК_Склад.Количество() > 0 Тогда

		ТекстСуммыКоличественныхСкладов = ТекстСуммыКоличественныхСкладов + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустойКонтрагент) КАК Контрагент,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаНК
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНК),
		|			&ВидыСубконтоНК,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто2 В (&МассивКонтрагентов)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Субконто1,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустойКонтрагент)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетУчета,
		|	Номенклатура,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ОстаткиПоСкладам.Счет КАК СчетУчета,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Субконто1 КАК Номенклатура,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто2, &ПустойКонтрагент) КАК Контрагент,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто3, &ПустойСклад) КАК Склад,
		|	СУММА(ЕСТЬNULL(ОстаткиПоСкладам.КоличествоОстатокДт, 0)) КАК КоличествоОстатокДт
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаНК_Склад
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНК_Склад),
		|			&ВидыСубконтоНКС,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто2 В (&МассивКонтрагентов)
		|				И Субконто3 В (&МассивСкладов)
		|				И Организация = &Организация) КАК ОстаткиПоСкладам
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоСкладам.Счет,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Субконто1,
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто2, &ПустойКонтрагент),
		|	ЕСТЬNULL(ОстаткиПоСкладам.Субконто3, &ПустойСклад)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетУчета,
		|	Номенклатура,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";

	КонецЕсли;

	Если ТаблицаВозвраты <> Неопределено И ТаблицаВозвраты.Количество() > 0 Тогда

		Запрос.УстановитьПараметр("ТаблицаВозвраты",    ТаблицаВозвраты);

		Текст = Текст + "
		|ВЫБРАТЬ
		|	ТаблицаВозвраты.Партия,
		|	ТаблицаВозвраты.Склад,
		|	ТаблицаВозвраты.Номенклатура,
		|	&Организация,
		|	ТаблицаВозвраты.Подразделение,
		|	ТаблицаВозвраты.СчетУчета,
		|	ТаблицаВозвраты.Количество КАК Количество,
		|	ТаблицаВозвраты.СуммаСписания КАК СуммаСписания,
		|	ТаблицаВозвраты.СуммаСписанияНУ КАК СуммаСписанияНУ,
		|	ТаблицаВозвраты.СуммаСписанияПР КАК СуммаСписанияПР,
		|	ТаблицаВозвраты.СуммаСписанияВР КАК СуммаСписанияВР
		|ПОМЕСТИТЬ ТаблицаВозвраты
		|ИЗ
		|	&ТаблицаВозвраты КАК ТаблицаВозвраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаВозвраты.СчетУчета КАК СчетУчета,
		|	ТаблицаВозвраты.Подразделение КАК Подразделение,
		|	ТаблицаВозвраты.Номенклатура КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	ТаблицаВозвраты.Партия КАК ДокументОприходования,
		|	ТаблицаВозвраты.Склад КАК Склад,
		|	ТаблицаВозвраты.Организация КАК Организация,
		|	СУММА(ТаблицаВозвраты.Количество) КАК КоличествоПоСкладу,
		|	СУММА(ТаблицаВозвраты.Количество) КАК Количество,
		|	СУММА(ТаблицаВозвраты.СуммаСписания) КАК Стоимость,
		|	СУММА(ТаблицаВозвраты.СуммаСписанияНУ) КАК СтоимостьНУ,
		|	СУММА(ТаблицаВозвраты.СуммаСписанияПР) КАК СтоимостьПР,
		|	СУММА(ТаблицаВозвраты.СуммаСписанияВР) КАК СтоимостьВР
		|ИЗ
		|	ТаблицаВозвраты КАК ТаблицаВозвраты
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаВозвраты.СчетУчета,
		|	ТаблицаВозвраты.Подразделение,
		|	ТаблицаВозвраты.Номенклатура,
		|	ТаблицаВозвраты.Склад,
		|	ТаблицаВозвраты.Партия,
		|	ТаблицаВозвраты.Организация";
	КонецЕсли;

	Если СчетаУчетаН.Количество() > 0 И СчетаУчетаН_Склад.Количество() = 0 Тогда

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Подразделение КАК Подразделение,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	&ПустаяПартия КАК ДокументОприходования,
		|	&ПустойСклад КАК Склад,
		|	Остатки.Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаН),
		|			&ВидыСубконтоН,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Подразделение,
		|	Остатки.Субконто1,
		|	Остатки.Организация";

	ИначеЕсли СчетаУчетаН.Количество() > 0 Тогда
		// СчетаУчетаН_Склад.Количество() > 0 

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	ОстаткиПоСкладам.СчетУчета,
		|	ОстаткиПоСкладам.Подразделение КАК Подразделение,
		|	ОстаткиПоСкладам.Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	&ПустаяПартия КАК ДокументОприходования,
		|	ОстаткиПоСкладам.Склад,
		|	&Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(ОстаткиПоСкладам.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.Количество, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.Стоимость, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьНУ, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьПР, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьВР, 0)) КАК СтоимостьВР
		|ИЗ
		|	ТаблицаСчетаУчетаН_Склад КАК ОстаткиПоСкладам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаУчетаН КАК СуммовыеОстатки
		|		ПО ОстаткиПоСкладам.СчетУчета = СуммовыеОстатки.СчетУчета
		|			И ОстаткиПоСкладам.Номенклатура = СуммовыеОстатки.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоСкладам.СчетУчета,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Номенклатура,
		|	ОстаткиПоСкладам.Склад";

	КонецЕсли;

	Если СчетаУчетаНС.Количество() > 0 Тогда

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Подразделение КАК Подразделение,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	&ПустаяПартия КАК ДокументОприходования,
		|	Остатки.Субконто2 КАК Склад,
		|	Остатки.Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНС),
		|			&ВидыСубконтоНС,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто2 В (&МассивСкладов)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Подразделение,
		|	Остатки.Субконто1,
		|	Остатки.Субконто2,
		|	Остатки.Организация";

	КонецЕсли;

	Если СчетаУчетаНП.Количество() > 0 И СчетаУчетаНП_Склад.Количество() =  0 Тогда

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Подразделение КАК Подразделение,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустаяПартия) КАК ДокументОприходования,
		|	&ПустойСклад КАК Склад,
		|	Остатки.Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНП),
		|			&ВидыСубконтоНП,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Подразделение,
		|	Остатки.Субконто1,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустаяПартия),
		|	Остатки.Организация";

	ИначеЕсли СчетаУчетаНП.Количество() > 0 Тогда
		//СчетаУчетаНП_Склад.Количество() >  0

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	ОстаткиПоСкладам.СчетУчета,
		|	ОстаткиПоСкладам.Подразделение КАК Подразделение,
		|	ОстаткиПоСкладам.Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	ОстаткиПоСкладам.ДокументОприходования,
		|	ОстаткиПоСкладам.Склад,
		|	&Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(ОстаткиПоСкладам.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.Количество, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.Стоимость, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьНУ, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьПР, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьВР, 0)) КАК СтоимостьВР
		|ИЗ
		|	ТаблицаСчетаУчетаНП_Склад КАК ОстаткиПоСкладам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаУчетаНП КАК СуммовыеОстатки
		|		ПО ОстаткиПоСкладам.СчетУчета = СуммовыеОстатки.СчетУчета
		|			И ОстаткиПоСкладам.Номенклатура = СуммовыеОстатки.Номенклатура
		|			И ОстаткиПоСкладам.ДокументОприходования = СуммовыеОстатки.ДокументОприходования
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоСкладам.СчетУчета,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Номенклатура,
		|	ОстаткиПоСкладам.ДокументОприходования,
		|	ОстаткиПоСкладам.Склад";

	КонецЕсли;

	Если СчетаУчетаНПС.Количество() > 0 Тогда

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Подразделение КАК Подразделение,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустаяПартия) КАК ДокументОприходования,
		|	Остатки.Субконто3 КАК Склад,
		|	Остатки.Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНПС),
		|			&ВидыСубконтоНПС,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто3 В (&МассивСкладов)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Подразделение,
		|	Остатки.Субконто1,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустаяПартия),
		|	Остатки.Субконто3,
		|	Остатки.Организация";

	КонецЕсли;

	Если СчетаУчетаНК.Количество() > 0 И СчетаУчетаНК_Склад.Количество() = 0 Тогда // субкомиссия

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Подразделение КАК Подразделение,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	&ПустаяПартия КАК ДокументОприходования,
		|	&ПустойСклад КАК Склад,
		|	Остатки.Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНК),
		|			&ВидыСубконтоНК,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто2 В (&МассивКонтрагентов)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Подразделение,
		|	Остатки.Субконто1,
		|	Остатки.Субконто2,
		|	Остатки.Организация";

	ИначеЕсли СчетаУчетаНК.Количество() > 0 Тогда
		//СчетаУчетаНК_Склад.Количество() > 0

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	ОстаткиПоСкладам.СчетУчета,
		|	ОстаткиПоСкладам.Подразделение КАК Подразделение,
		|	ОстаткиПоСкладам.Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	&ПустаяПартия КАК ДокументОприходования,
		|	ОстаткиПоСкладам.Склад,
		|	&Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(ОстаткиПоСкладам.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.Количество, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.Стоимость, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьНУ, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьПР, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(СуммовыеОстатки.СтоимостьВР, 0)) КАК СтоимостьВР
		|ИЗ
		|	ТаблицаСчетаУчетаНК_Склад КАК ОстаткиПоСкладам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаУчетаНК КАК СуммовыеОстатки
		|		ПО ОстаткиПоСкладам.СчетУчета = СуммовыеОстатки.СчетУчета
		|			И ОстаткиПоСкладам.Номенклатура = СуммовыеОстатки.Номенклатура
		|			И ОстаткиПоСкладам.Контрагент = СуммовыеОстатки.Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоСкладам.СчетУчета,
		|	ОстаткиПоСкладам.Подразделение,
		|	ОстаткиПоСкладам.Номенклатура,
		|	ОстаткиПоСкладам.Контрагент,
		|	ОстаткиПоСкладам.Склад";

	КонецЕсли;

	Если СчетаУчетаНПК.Количество() > 0 Тогда // субкомиссия

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Подразделение КАК Подразделение,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустаяПартия) КАК ДокументОприходования,
		|	Остатки.Субконто3 КАК Склад,
		|	Остатки.Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНПК),
		|			&ВидыСубконтоНПК,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто3 В (&МассивКонтрагентов)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Подразделение,
		|	Остатки.Субконто1,
		|	ЕСТЬNULL(Остатки.Субконто2, &ПустаяПартия),
		|	Остатки.Субконто3,
		|	Остатки.Организация";

	КонецЕсли;

	Если СчетаУчетаНКС.Количество() > 0 Тогда // дав. сырье

		Если Текст <> "" Тогда
			Текст = Текст + "
			|
			| ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		Текст = Текст + "
		|ВЫБРАТЬ
		|	Остатки.Счет КАК СчетУчета,
		|	Остатки.Подразделение КАК Подразделение,
		|	Остатки.Субконто1 КАК Номенклатура,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДокументОприходованияДата,
		|	&ПустаяПартия КАК ДокументОприходования,
		|	Остатки.Субконто3 КАК Склад,
		|	Остатки.Организация КАК Организация,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК КоличествоПоСкладу,
		|	СУММА(ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаОстатокДт, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаПРОстатокДт, 0)) КАК СтоимостьПР,
		|	СУММА(ЕСТЬNULL(Остатки.СуммаВРОстатокДт, 0)) КАК СтоимостьВР
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В (&СчетаУчетаНКС),
		|			&ВидыСубконтоНКС,
		|			&УсловиеПоПодразделению
		|				И Субконто1 В (&МассивНоменклатуры)
		|				И Субконто2 В (&МассивКонтрагентов)
		|				И Субконто3 В (&МассивСкладов)
		|				И Организация = &Организация) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Счет,
		|	Остатки.Подразделение,
		|	Остатки.Субконто1,
		|	Остатки.Субконто2,
		|	Остатки.Субконто3,
		|	Остатки.Организация";

	КонецЕсли;

	Текст = ТекстСуммыКоличественныхСкладов + Текст;

	Если БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Текст = СтрЗаменить(Текст, "&УсловиеПоПодразделению", "Подразделение = &Подразделение");
	Иначе
		Текст = СтрЗаменить(Текст, "&УсловиеПоПодразделению", "ИСТИНА");
	КонецЕсли;

	Запрос.Текст = Текст;

	Результат = Запрос.Выполнить().Выгрузить();
	//Бойков++
	Если Результат.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Подразделение = &Подразделение","ИСТИНА");
		Результат = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	//Бойков==

	Если ЕстьСписаниеПрослеживаемыхТоваровКомитента(ТаблицаСписания) Тогда
		Результат = ДополнитьТаблицуСписанияИнформациейОКомитенте(Результат);
	КонецЕсли;

	Если СчетаУчетаНПК.Количество() + СчетаУчетаНПС.Количество() + СчетаУчетаНП.Количество() <> 0 Тогда

		ОбщегоНазначенияБПВызовСервера.ДобавитьДатуДокументаКРезультатуЗапроса(Результат,"ДокументОприходования", "ДокументОприходованияДата");

		Результат.Сортировать("ДокументОприходованияДата, ДокументОприходования", Новый СравнениеЗначений);

	КонецЕсли;

	Результат.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	НомерСтроки = 1;
	Для каждого СтрокаРезультата Из Результат Цикл
		СтрокаРезультата.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;

	Возврат Результат;

КонецФункции
